{"version":3,"file":"static/js/Movies.471e3791.chunk.js","mappings":"qNAyDA,UAnDe,WACb,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAC/B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,MAqBjB,OARAC,EAAAA,EAAAA,YAAU,WACHT,EAAaG,IAAI,WAItBO,EAAAA,EAAAA,IAAeV,EAAaG,IAAI,UAAUQ,KAAKL,KAC9C,CAACJ,EAAOF,EAAcM,KAGvB,iCACE,kBAAMM,SApBO,SAAAC,GACfA,EAAIC,iBAC2B,KAA3BD,EAAIE,OAAOb,MAAMc,OAIrBf,EAAgB,CAAEC,MAAOW,EAAIE,OAAOb,MAAMc,QAC1CH,EAAIE,OAAOb,MAAMc,MAAQ,IAJvBC,EAAAA,GAAAA,MAAY,wBAiBZ,WACE,kBAAOC,KAAK,OAAOC,KAAK,WACxB,mBAAQD,KAAK,SAAb,gCAGF,mBAEA,wBACGb,GACCA,EAAWe,KAAI,SAAAC,GACb,OACE,yBACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMhB,GAAYiB,GAAE,kBAAaH,EAAGI,IAAnD,SACGJ,EAAGK,OAASL,EAAGM,iBAFXN,EAAGI,c,iMCzCpBG,EAAgB,CACpBC,QAHc,oCAMVC,E,MAAkBC,GAAAA,OAAa,CACnCC,QANe,+BAOfC,OAAQL,IAGGM,EAAY,mCAAG,sGACHJ,EAAgB3B,IAAI,uBADjB,uBAClBgC,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,qDAIZzB,EAAc,mCAAG,WAAMR,GAAN,yFACL4B,EAAgB3B,IAAI,gBAAiB,CAC1D8B,OAAQ,CAAE/B,MAAAA,KAFgB,uBACpBiC,EADoB,EACpBA,KADoB,kBAIrBA,EAAKC,SAJgB,2CAAH,sDAMdC,EAAgB,mCAAG,WAAMZ,GAAN,yFACPK,EAAgB3B,IAAhB,gBAA6BsB,IADtB,uBACtBU,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAIhBG,EAAa,mCAAG,WAAMb,GAAN,yFACJK,EAAgB3B,IAAhB,iBAA8BsB,EAA9B,aADI,uBACnBU,EADmB,EACnBA,KADmB,kBAEpBA,GAFoB,2CAAH,sDAIbI,EAAe,mCAAG,WAAMd,GAAN,yFACNK,EAAgB3B,IAAhB,mBAChBsB,EADgB,aADM,uBACrBU,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH","sources":["pages/Movies.jsx","servise/service.js"],"sourcesContent":["import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getSerchMovies } from 'servise/service';\nimport { Link, useLocation } from 'react-router-dom';\nimport { toast } from 'react-toastify';\n\nconst Movies = () => {\n  const [searchParams, setSerachParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [searchFilm, setSearchFilm] = useState([]);\n  //\n  const location = useLocation();\n  //\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    if (evt.target.query.value === '') {\n      toast.error('Please add any text');\n      return;\n    }\n    setSerachParams({ query: evt.target.query.value });\n    evt.target.query.value = '';\n  };\n\n  useEffect(() => {\n    if (!searchParams.get('query')) {\n      return;\n    }\n\n    getSerchMovies(searchParams.get('query')).then(setSearchFilm);\n  }, [query, searchParams, setSearchFilm]);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" name=\"query\" />\n        <button type=\"submit\">Search a movie</button>\n      </form>\n\n      <hr />\n\n      <ul>\n        {searchFilm &&\n          searchFilm.map(el => {\n            return (\n              <li key={el.id}>\n                <Link state={{ from: location }} to={`/movies/${el.id}`}>\n                  {el.title || el.original_name}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n//------------------------------------------------------//\nconst KEY_API = '7a4cd4317772102a9b88ef6a54b71590';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst defaultParams = {\n  api_key: KEY_API,\n};\n\nconst moviesApiClient = axios.create({\n  baseURL: BASE_URL,\n  params: defaultParams,\n});\n\nexport const getPoPMovies = async () => {\n  const { data } = await moviesApiClient.get('/trending/movie/day');\n  return data;\n};\nexport const getSerchMovies = async query => {\n  const { data } = await moviesApiClient.get('/search/movie', {\n    params: { query },\n  });\n  return data.results;\n};\nexport const getDetailsMovies = async id => {\n  const { data } = await moviesApiClient.get(`movie/${id}`);\n  return data;\n};\nexport const getCastMovies = async id => {\n  const { data } = await moviesApiClient.get(`/movie/${id}/credits`);\n  return data;\n};\nexport const getRewiesMovies = async id => {\n  const { data } = await moviesApiClient.get(`\n/movie/${id}/reviews`);\n  return data;\n};\n"],"names":["useSearchParams","searchParams","setSerachParams","query","get","useState","searchFilm","setSearchFilm","location","useLocation","useEffect","getSerchMovies","then","onSubmit","evt","preventDefault","target","value","toast","type","name","map","el","state","from","to","id","title","original_name","defaultParams","api_key","moviesApiClient","axios","baseURL","params","getPoPMovies","data","results","getDetailsMovies","getCastMovies","getRewiesMovies"],"sourceRoot":""}